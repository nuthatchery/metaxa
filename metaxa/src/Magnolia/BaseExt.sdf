%% Magnolia.sdf is part of Magnolia
%%
%% Copyright (C) 2008,2009  Anya Helene Bagge
%% Copyright (C) 2008  Valentin David
%% Copyright (C) 2008,2009  University of Bergen
%%
%% Contact: <magnolia@magnolia-lang.org>
%%
%% This program is free software: you can redistribute it and/or modify
%% it under the terms of the GNU General Public License as published by
%% the Free Software Foundation, either version 3 of the License, or
%% (at your option) any later version.
%% 
%% This program is distributed in the hope that it will be useful,
%% but WITHOUT ANY WARRANTY; without even the implied warranty of
%% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%% GNU General Public License for more details.
%% 
%% You should have received a copy of the GNU General Public License
%% along with this program.  If not, see <http://www.gnu.org/licenses/>.
module Magnolia/BaseExt

imports 
  Magnolia/Core
  Magnolia/BaseExt/Literals
  Magnolia/BaseExt/Statements
  Magnolia/BaseExt/Operators
  Magnolia/BaseExt/Declarations

exports
  sorts
    Program
    Decl
    ModuleHead
    ModuleClause
    ImportClause
    CompileClause
    QuotedString
    RequiresClause
    ConceptClauseArgument
    TopDecl

  context-free syntax

    -> ModuleHead {cons("SimpleModule")}

%%    ModuleClause ";" -> TopDecl {cons("ModuleClause")}

    "language" {Name ","}* -> ModuleClause {cons("Language")}

    "imports" {ImportClause ","}* -> ModuleClause {cons("Imports")}

    "requires" {RequiresClause ","}* -> ModuleClause {cons("Requires")}

    "compile" "\"" String "\"" "{" CompileClause* "}" 
		-> ModuleClause {cons("CompilePragma")}

    ID "(" {QuotedString ","}* ")" ";" 
		-> CompileClause {cons("Pragma")}

    "\"" String "\"" -> QuotedString {cons("Dummy")}

    Identifier "<" {ConceptClauseArgument ","}* ">" -> RequiresClause {cons("ImportRequires")}
    Name -> ImportClause {cons("ImportAll")}

    Type -> ConceptClauseArgument {cons("Unresolved")}

    "module" Name -> ImportClause {cons("ImportModule")}

    "module" Name "=" Name -> ImportClause {cons("ImportRename")}

    ";" -> Decl {cons("Nop")}

